datasource db {
    provider = "postgresql"
    url      = env("DB_URL")
}

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["prismaSchemaFolder", "omitApi"]
}

enum Role {
    admin
    paidUser
    user
}

model User {
    id            Int             @id @default(autoincrement())
    email         String          @unique
    password      String
    role          Role            @default(user)
    createdMovies Movie[]
    likedMovies   MovieUserLike[]
    chats         Chat[]
    chatrooms     ChatRoom[]
}

model Movie {
    id            Int             @id @default(autoincrement())
    title         String          @unique
    creator       User            @relation(fields: [creatorId], references: [id])
    creatorId     Int
    likeCount     Int             @default(0)
    dislikeCount  Int             @default(0)
    likedUsers    MovieUserLike[]
    movieFilePath String
    genres        Genre[]
    detail        MovieDetail     @relation(fields: [detailId], references: [id])
    detailId      Int             @unique
    director      Director        @relation(fields: [directorId], references: [id])
    directorId    Int
    createdAt     DateTime        @default(now())
    updatedAt     DateTime        @updatedAt()
    version       Int             @default(0)
}

model MovieUserLike {
    movie   Movie   @relation(fields: [movieId], references: [id])
    movieId Int
    user    User    @relation(fields: [userId], references: [id])
    userId  Int
    isLike  Boolean

    @@id([movieId, userId])
}

//One TO One 에서 상대 field는 ? 처리
model MovieDetail {
    id     Int    @id @default(autoincrement())
    detail String
    movie  Movie?
}

model Chat {
    id         Int      @id @default(autoincrement())
    author     User     @relation(fields: [authorId], references: [id])
    authorId   Int
    chatRoom   ChatRoom @relation(fields: [chatRoomId], references: [id])
    chatRoomId Int
    message    String
}

model ChatRoom {
    id    Int    @id @default(autoincrement())
    users User[]
    chats Chat[]
}

model Genre {
    id     Int     @id @default(autoincrement())
    name   String  @unique
    movies Movie[]
}

model Director {
    id          Int      @id @default(autoincrement())
    name        String   @unique
    dob         DateTime
    nationality String
    movies      Movie[]
}
